<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjdfzh.collectionreceiveprocess.dao.DispatchRoleTaskMapper">
<resultMap type="com.bjdfzh.collectionreceiveprocess.entity.RoleTestProject" id="RoleTestProjectMap">
<id column="id" property="id"/>
<result column="label" property="label" />
<result column="pid" property="pid" />
<collection property="taskdispatchs" ofType="com.bjdfzh.collectionreceiveprocess.entity.DispatchRoleTask">
<id column="taskid" property="id" />
<result column="roleid" property="roleid" />
<result column="testid" property="testid" />
<result column="sampleid" property="sampleid" />
<result column="receivequality" property="receivequality" />
<result column="screendiameter" property="screendiameter" />
</collection> 
</resultMap>  
 <select id="getroletaskdispatch" parameterType="string" resultMap="RoleTestProjectMap">
		        select
				 tr.id
				 ,tr.pid
				 ,tr.label 
				 from
				 (
				 select t.id,null pid,t.name label  from t_role  t
				 where  t.organizationId= 'fe77519d-4467-214e-647b-e0089e45306d' 
				 )  tr 
    </select>  
    <insert id="addtaskdispatchs" parameterType="java.util.ArrayList">
     insert into t_sample_dispatch(
                                    id
									,testprojectid
									,roleid
									,receivequality
									,screendiameter
									,remark 
									)values 
	  <foreach collection="list" index="index" separator="," item="item">
            (
		     UUID()
			,#{item.testid}
			,#{item.roleid}
			,#{item.receivequality}
			,#{item.screendiameter}
			,#{item.remark}
			) 
         </foreach>
    </insert> 
    <delete id="deletedispatchtask" parameterType="string">
    delete from t_sample_dispatch t 
		 where exists
		    (
				    select 1 from
						 (
						 select
						 tp.id,tp.sampleid
						 from
						 t_test_project tp 
						 where exists
						 (
						   select 1 from
							 (
							   select  sampleid from t_sample ts
								 where exists 
								 (
								    select 1 from 
										(
										select projectid from
										t_business_project 
										where contactid=#{contactid}
										) tpro
										where tpro.projectid=ts.projectid 
								 )
							 ) ts
							 where ts.sampleid=tp.sampleid
						 )
						 ) tp
						where tp.id=t.testprojectid
					)	   
    </delete> 
</mapper>