<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjdfzh.businessprocess.dao.SampleMapper">
<resultMap type="com.bjdfzh.businessprocess.entity.Sample" id="SampleMap">
<id column="id" property="id"/>
	<result column="projectctid" property="projectctid" />
	<result column="samplename" property="samplename" />
	<result column="samplenumber" property="samplenumber" />
	<result column="testtypeid" property="testtypeid" />
	<result column="testothertype" property="testothertype" />
	<result column="samplesourceid" property="samplesourceid" />
	<result column="samplequality" property="samplequality" />
	<result column="samplespec" property="samplespec" />
	<result column="samplevolume" property="samplevolume" />
	<result column="storeid" property="storeid" />
	<result column="storeother" property="storeother" />
	<result column="statusid" property="statusid" />
	<result column="statusother" property="statusother" />
	<result column="processid" property="processid" />
	<result column="processother" property="processother" />
	<result column="sampleuserid" property="sampleuserid" />
	<result column="sampledate" property="sampledate" />
	<result column="manufactory" property="manufactory" />
	<result column="manufactoryaddress" property="manufactoryaddress" />
	<result column="purty" property="purty" />
	<result column="brand" property="brand" />
	<result column="manufactoryphone" property="manufactoryphone" />
	<result column="manudate" property="manudate" />
	<result column="manuno" property="manuno" />
	<result column="remark" property="remark" />
	<result column="expiredday" property="expiredday" />
	<result column="price" property="price" />
	<result column="externprice" property="externprice" /> 
	<result column="standardfee" property="standardfee" />
</resultMap>

    <select id="getsamples" parameterType="string" resultMap="SampleMap">
       select
		ts.sampleid 
		,ts.projectid
		,ts.wrapherproperties
		,ts.standardfee
		,samplename
		,samplenumber 
		,samplequality
		,samplespec
		,samplevolume 
		,sampledate
		,manufactory
		,manufactoryaddress
		,purty
		,brand
		,manufactoryphone
		,manudate
		,manuno
		,ts.remark
		,expiredday
		,price
		,tm.testproject
		,tm.methodname
		,externprice
	  ,ts.testtypeid
	  ,t.testtype
	  ,ts.testtypeother
		,ts.storeid,tstore.storetempurature
		, tstore.storename,ts.storeother
		 ,ts.processid
		 ,  tprocess.sampleprocess   processtype
		 ,ts.processother
			,ts.statusid 
			, tsttus.statustype  statustype
			,ts.statusother
		  ,ts.executestandard
			,ts.executegrade
		 from t_sample ts
		 left join
		 (
		  select
			 t.sampleid,
			GROUP_CONCAT(tc.testproject) testproject,
			GROUP_CONCAT(tm.methodname) methodname
			from t_test_project t
			inner join t_qualification tq
			on tq.id=t.qualificationid
			inner join t_test_category tc
			on tc.id=tq.testprojectid
			left join t_test_method tm
			on tm.id=tq.methodid
			group by  t.sampleid
		 ) tm
		 on   tm.sampleid=ts.sampleid
		 left join t_test_type t
		 on t.id=ts.testtypeid
		 left join t_sapmple_store_type tstore
		 on tstore.id=ts.storeid
		 left join t_sample_process_type tprocess
		 on tstore.id=ts.processid
		 left join t_sapmle_status_type tsttus
		 on tsttus.id=ts.statusid
		  where ts.contactid=#{id}
    </select> 
    <select id="getsample" parameterType="string" resultMap="SampleMap">
       select
		ts.sampleid 
		,ts.projectid
		,ts.wrapherproperties
		,ts.standardfee
		,samplename
		,samplenumber 
		,samplequality
		,samplespec
		,samplevolume 
		,sampledate
		,manufactory
		,manufactoryaddress
		,purty
		,brand
		,manufactoryphone
		,manudate
		,manuno
		,ts.remark
		,expiredday
		,price
		,tm.testproject
		,tm.methodname
		,externprice
	  ,ts.testtypeid
	  ,t.testtype
	  ,ts.testtypeother
		,ts.storeid,tstore.storetempurature
		, tstore.storename,ts.storeother
		 ,ts.processid
		 ,  tprocess.sampleprocess   processtype
		 ,ts.processother
			,ts.statusid 
			, tsttus.statustype  statustype
			,ts.statusother
		  ,ts.executestandard
			,ts.executegrade
		 from t_sample ts
		 left join
		 (
		  select
			 t.sampleid,
			GROUP_CONCAT(tc.testproject) testproject,
			GROUP_CONCAT(tm.methodname) methodname
			from t_test_project t
			inner join t_qualification tq
			on tq.id=t.qualificationid
			inner join t_test_category tc
			on tc.id=tq.testprojectid
			left join t_test_method tm
			on tm.id=tq.methodid
			group by  t.sampleid
		 ) tm
		 on   tm.sampleid=ts.sampleid
		 left join t_test_type t
		 on t.id=ts.testtypeid
		 left join t_sapmple_store_type tstore
		 on tstore.id=ts.storeid
		 left join t_sample_process_type tprocess
		 on tstore.id=ts.processid
		 left join t_sapmle_status_type tsttus
		 on tsttus.id=ts.statusid
		  where ts.sampleid=#{id}
    </select> 
      <insert id="addsample" parameterType="com.bjdfzh.businessprocess.entity.Sample" >
     insert into t_sample(
        sampleid  
		,projectid
		,samplename
		,samplenumber 
		,samplequality
		,samplespec
		,samplevolume
		,storeid
		,storeother
		,statusid
		,statusother
		,processid
		,processother
		,sampleuserid
		,sampledate
		,manufactory
		,manufactoryaddress
		,purty
		,brand
		,manufactoryphone
		,manudate
		,manuno
		,remark
		,expiredday
		,price 
		,standardfee
		 )values(
		#{id}
		,#{projectid}
		,#{samplename}
		,#{samplenumber} 
		,#{samplequality}
		,#{samplespec}
		,#{samplevolume}
		,#{store.id}
		,#{storeother}
		,#{status.id}
		,#{statusother}
		,#{process.id}
		,#{processother}
		,#{sampleuserid}
		,#{sampledate}
		,#{manufactory}
		,#{manufactoryaddress}
		,#{purty}
		,#{brand}
		,#{manufactoryphone}
		,#{manudate}
		,#{manuno}
		,#{remark}
		,#{expiredday}
		,#{price}
		,#{standardfee}
		)
     </insert>
     <update id="updatesample" parameterType="com.bjdfzh.businessprocess.entity.Sample">
			  update t_sample set
			  projectid=#{contactid}
			,samplename=#{samplename}
			,samplenumber=#{samplenumber} 
			,samplequality=#{samplequality}
			,samplespec=#{samplespec}
			,samplevolume=#{samplevolume}
			,storeid=#{storeid}
			,storeother=#{storeother}
			,statusid=#{statusid}
			,statusother=#{statusother}
			,processid=#{processid}
			,processother=#{processother}
			,sampleuserid=#{sampleuserid}
			,sampledate=#{sampledate}
			,manufactory=#{manufactory}
			,manufactoryaddress=#{manufactoryaddress}
			,purty=#{purty}
			,brand=#{brand}
			,manufactoryphone=#{manufactoryphone}
			,manudate=#{manudate}
			,manuno=#{manuno}
			,remark=#{remark}
			,expiredday=#{expiredday}
			,price=#{price} 
			,standardfee=#{standardfee}
			where sampleid=#{id}
     </update>
      <insert id="addsamples" parameterType="java.util.ArrayList">
     insert t_sample(
         sampleid  
		,projectid
		,samplename
		,samplenumber 
		,samplequality
		,samplespec
		,samplevolume
		,storeid
		,storeother
		,statusid
		,statusother
		,processid
		,processother 
		,sampledate
		,manufactory
		,manufactoryaddress
		,purty
		,brand
		,manufactoryphone
		,manudate
		,manuno
		,remark
		,expiredday
		,price
		,standardfee
		 )values
     <foreach collection="list"   index="index" separator="," item="item">
        (
         #{item.id}  
		,#{item.projectid}
		,#{item.samplename}
		,#{item.samplenumber} 
		,#{item.samplequality}
		,#{item.samplespec}
		,#{item.samplevolume}
		,#{item.store.id}
		,#{item.storeother}
		,#{item.status.id}
		,#{item.statusother}
		,#{item.process.id}
		,#{item.processother} 
		,#{item.sampledate}
		,#{item.manufactory}
		,#{item.manufactoryaddress}
		,#{item.purty}
		,#{item.brand}
		,#{item.manufactoryphone}
		,#{item.manudate}
		,#{item.manuno}
		,#{item.remark}
		,#{item.expiredday}
		,#{item.price} 
		,#{item.standardfee}
        )  
     </foreach>
    </insert> 
      <delete id="deletesample"  parameterType="string">
       delete from t_sample where sampleid=#{id}
     </delete>
     <update id="supplimentupdatesamples" parameterType="list">
            update t_sample
            <trim prefix="set" suffixOverrides=",">
             <trim prefix="statusid =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.status.id}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="processid =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.process.id}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="testtypeid =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.testtype.id}
                         </if>
                         </foreach>
                         </trim>
                          <trim prefix="storeid =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.store.id}
                         </if>
                         </foreach>
                         </trim>
               <trim prefix="statusother =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.statusother}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="processother =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.processother}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="testtypeother =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.testtypeother}
                         </if>
                         </foreach>
                         </trim>
                          <trim prefix="storeother =case" suffix="end,">
                         <foreach collection="list" item="i" index="index">
	                         <if test="i.id!=null">
	                          when sampleid=#{i.id} then #{i.storeother}
	                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="brand =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.brand}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="executestandard =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.executestandard}
                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="executegrade =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.executegrade}
                         </if>
                         </foreach>
                         </trim>
                          <trim prefix="wrapherproperties =case" suffix="end,">
                         <foreach collection="list" item="i" index="index">
	                         <if test="i.id!=null">
	                          when sampleid=#{i.id} then #{i.wrapherproperties}
	                         </if>
                         </foreach>
                         </trim>
                         <trim prefix="samplespec =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.id!=null">
                          when sampleid=#{i.id} then #{i.samplespec}
                         </if>
                         </foreach>
                         </trim>
                          <trim prefix="samplequality =case" suffix="end,">
                         <foreach collection="list" item="i" index="index">
	                         <if test="i.id!=null">
	                          when sampleid=#{i.id} then #{i.samplequality}
	                         </if>
                         </foreach>
                         </trim>
                         </trim>
                          where
			            <foreach collection="list" separator="or" item="i" index="index" >
			              sampleid=#{i.id}
			          </foreach> 
     </update>
</mapper>